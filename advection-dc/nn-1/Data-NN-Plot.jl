using LinearAlgebra
using PyPlot
include("../../nn/mynn.jl")

rcParams = PyPlot.PyDict(PyPlot.matplotlib."rcParams")
    mysize = 20
    font0 = Dict(
    "font.size" => mysize,
    "axes.labelsize" => mysize,
    "xtick.labelsize" => mysize,
    "ytick.labelsize" => mysize,
    "legend.fontsize" => mysize,
    )
merge!(rcParams, font0)


#  Data  | width | cost  |  Training-Time | Test-Error  |  
PCA_Data = 
[ 156    16         NaN    0.6084573871259118   1.5575577363819808;
  156    64         NaN    0.26742261065037537   1.257862746116819;
  156    128        NaN   0.11678328462279107   1.0516742789158156;
  156    256        NaN    0.021204286262360095   0.9089832365460071;
  156    512        NaN    0.004504288279964266   0.7830523396169419;
  #  
  312    16          NaN   0.5456614521161319   1.1711623754276772;
  312    64          NaN   0.2934216563896375   1.0505449689440756;
  312    128         NaN   0.14914733695794824   0.9086002268800691;
  312    256         NaN   0.03151725312316239   0.7589461699491862;
  312    512         NaN   0.005569140017928824   0.6609454078623234;
  #  
  625    16           NaN   0.5027272517073383   0.5263600574367807;
  625    64           NaN   0.31790805692217045   0.5627093218157978;  
  625    128          NaN   0.18850281647549924   0.6183358790445058;   
  625    256          NaN   0.057373661654671455   0.5794659793197657;
  625    512          NaN   0.5027272517073383   0.5263600574367807;  
  #  
  1250    16   NaN   0.48259092841223267   0.4963929864336351;
  1250    64   NaN    0.3064183817125834   0.3586488991910545;
  1250    128  NaN    0.2242677877371415   0.40833344723734827;
  1250    256  NaN    0.10809620313157166   0.5184455574313059;
  1250    512  NaN   0.010344457611988727   0.4613521977125727; 
  #  
  2500    16   NaN  0.4955379711202069   0.5002972940219923;
  2500    64   NaN  0.30748488756544595   0.3291886087617415;
  2500    128  NaN  0.235688517494397   0.2996577419311041;
  2500    256  NaN  0.17055474334690127   0.402115100601197;
  2500    512  NaN  0.032204974588403226   0.48563185775505907;  
  #  
  5000    16   NaN   0.5066913411085525   0.5072694927644932;
  5000    64   NaN   0.30579536242940364   0.31447438020077745;
  5000    128  NaN   0.24095214275506097   0.26903407807050433;
  5000    256  NaN   0.19669161367689167   0.31768125315702417;
  5000    512  NaN   0.10642171474599198   0.4358959085011482;  
  #  
  10000    16  NaN   0.49595651585575423   0.49948139229587535;
  10000    64  NaN   0.3166265422201301   0.3240842404677336;
  10000    128 NaN   0.24823434636652683   0.2645259883217262;
  10000    256 NaN   0.2116549235681295   0.28234096560735056;
  10000    512 NaN   0.16281897521270286   0.360732170273729;
  #  
  20000    16  NaN   0.507654790244395   0.5088855802023913;
  20000    64  NaN   0.3122510836042824   0.31488633949559136;
  20000    128 NaN   0.25246476507359655   0.260076577253063;
  20000    256 NaN   0.22793965950144088   0.2599922461220232;
  20000    512 NaN   0.19668707687277384   0.3020278976573527
]

DeepONet_Data = 
 #################################  
 [ 156    16         NaN     0.7146585859932022   1.3763202431008472;
  156    64         NaN      0.561216507026522   1.0961837682627646;
  156    128         NaN     0.46991208451028416   0.9104080262549784;
  156    256        NaN      0.4056941386151302   0.8622366372112814;
  156    512        NaN      0.3930231350351069   0.809099157512515;
  #  
  312    16          NaN     0.6467149682782166  1.0417801285822885;
  312    64          NaN     0.49766031598721544  0.8718563525115085;
  312    128         NaN     0.42481265202488955  0.7564485886916348;
  312    256         NaN     0.3777936552107153  0.7089183985569723;
  312    512         NaN     0.3496710743415032  0.666111393969012;
  #  
  625    16           NaN   0.647940763458916  0.7113057835275447;
  625    64           NaN   0.471354128392048  0.6025923958302288;   
  625    128         NaN    0.38211449887574545  0.5464797408202968;   
  625    256          NaN   0.34282394626946905  0.5118569026443244;
  625    512         NaN    0.3330604732208417  0.46599784719970866;  
  #  
  1250    16   NaN    0.6156897334188141  0.6201653787806177;
  1250    64   NaN    0.4537095658996929  0.5037962328639484;
  1250    128  NaN    0.37114228791328296  0.4725173030600452;
  1250    256  NaN    0.3241910177967947   0.445906110022598;
  1250    512   NaN   0.2892548136556579   0.40264444990397985;  
  #  
  2500    16   NaN        0.5729916587368502   0.5749197538388409;
  2500    64   NaN        0.4222415808823769   0.431646009998192;
  2500    128  NaN        0.34749587401957394   0.38753767045038934;
  2500    256  NaN        0.3064790226680413   0.3882508388627846;
  2500    512   NaN       0.29027644106282685   0.3771900290530607;  
  #  
  5000    16    NaN  0.5561211748645638   0.5563104366890146;
  5000    64   NaN   0.40735754627132936   0.40851379216922373;
  5000    128  NaN   0.32990813793431617   0.34153704654655614;
  5000    256  NaN   0.291548413653515   0.34012702243103227;
  5000    512  NaN   0.2847784038041061   0.35456015496033294;  
  #  
  10000    16  NaN  0.5643234405039832   0.5668194295544774;
  10000    64  NaN  0.3763519447060968   0.38072213339808547;
  10000    128 NaN  0.3151718534361421   0.32461714429818483;
  10000    256 NaN  0.2906454773692265   0.31752791479719206;
  10000    512 NaN  0.2860162416735247   0.33985749953266553;
  #  
  20000    16   NaN  0.5359881775977237   0.5362400757183544;
  20000    64  NaN   0.3757888397475228   0.3769948025677841;
  20000    128 NaN   0.3054710176856555   0.30945079706179174;
  20000    256 NaN   0.2917997972778584   0.30615584852642974;
  20000    512 NaN   0.27290242571176565   0.3086387220159727
]



PARA_Data = 
 [ 156    16         NaN        0.5655432791128198  15.026446440893478;
  156    64         NaN         0.4877889332322219  6.324599136124803;
  156    128         NaN        0.4682526989241441  2.79138658267015;
  156    256        NaN         0.4340349708243561  1.6192332469665818;
  156    512        NaN         0.4077159499152139  1.24986467618123;
  #  
  312    16          NaN        0.5526633630089918  1.787078659245431;
  312    64          NaN        0.4716500592661029  2.033956467971325;
  312    128         NaN        0.4453677301642017  1.6349360007988387;
  312    256         NaN        0.40964317380993  1.2559566628359995;
  312    512         NaN        0.3906678572970964  1.072386216680879;
  #  
  625    16           NaN       0.5786521973050801  1.0716875118826112;
  625    64           NaN       0.46142868242939183  1.2726035282024162;   
  625    128         NaN        0.410234327627727  1.1134120548896604;   
  625    256          NaN       0.3933555541848898  0.9603936150480178;
  625    512         NaN        0.3793293676386748  0.9180001608864563;  
  #  
  1250    16    NaN  0.5749442724664534   0.8484878307241502;
  1250    64   NaN   0.4535196644948339   0.9663589880151175;
  1250    128  NaN   0.3871947998582587   0.8757038112737023;
  1250    256  NaN   0.36910997243642696   0.8130409585986648;
  1250    512   NaN  0.3534111542269778   0.7832710491947853;  
  #  
  2500    16   NaN    0.5456122128997692   0.6044262308106956;
  2500    64   NaN    0.44057434249513755   0.7274426107498551;
  2500    128  NaN    0.37882925750790764   0.7485514538136613;
  2500    256  NaN    0.34206703492561735   0.6897482235359996;
  2500    512   NaN   0.3329902375495752   0.65625514882549;  
  #  
  5000    16    NaN  0.5032379053414555   0.5098896366877244;
  5000    64   NaN   0.40982644525251344   0.5298197333910406;
  5000    128  NaN   0.3546636846431875   0.5679242608470021;
  5000    256  NaN   0.31645700989649267   0.5631124747831129;
  5000    512  NaN   0.2987937494880971   0.5486797996986663;  
  #  
  10000    16  NaN   0.49184068524021657   0.49998530055692725;
  10000    64  NaN   0.36117399022279045   0.3903815025672002;
  10000    128 NaN   0.32789583896628677   0.42525609808867937;
  10000    256 NaN   0.2946618106397591   0.44531803011358206;
  10000    512 NaN   0.2587274275704134   0.4622229028546679;
  #
  20000    16  NaN   0.49432758639760377   0.4973166407982546;
  20000    64  NaN   0.3331861244442961   0.34029472127006344;
  20000    128 NaN   0.3108239613015065   0.33790937602076104;
  20000    256 NaN   0.28261728703913247   0.3519594301360205;
  20000    512 NaN   0.24636007707591184   0.37468527599179596;
]

FNO_Data =
 [ 156    2         NaN        0.4256392738375908  0.4221138240626225;
  156    4         NaN         0.3830929156870414  0.3875894730862899;
  156    8         NaN         0.36362989901159054  0.3908620268488542;
  156    16        NaN         0.30077138029707545  0.4115902110456656;
  156    32        NaN         0.15491620182561186  0.5686663155897688;
  #  
  312    2          NaN        0.4107366244857892  0.42109151213214946;
  312    4          NaN        0.37754167683231526  0.39203781314576286;
  312    8         NaN         0.3582004191688238  0.38875143590550393;
  312    16         NaN        0.29625675041610616  0.4044234878264176;
  312    32         NaN        0.1637836000882089  0.5431042401931989;
  #  
  625    2           NaN          0.411353129863739  0.40333491344451905;
  625    4           NaN          0.36841671266555787  0.3630737058401108;   
  625    8         NaN            0.34588489632606506  0.3562394423007965;   
  625    16          NaN          0.298733308917284  0.3698573434531689;
  625    32         NaN           0.18406202344745398  0.5030309374928474;  
  #  
  1250    2    NaN 0.4049228880286217   0.4077382322669029;
  1250     4   NaN 0.35002535011768343   0.35641955274939535;
  1250     8  NaN 0.33517771841287614   0.3499182124227285;
  1250    16  NaN 0.29903018854260444   0.3594671847164631;
  1250    32   NaN  0.20019702145308257   0.47131305307149884;  
  #  
  2500    2   NaN 0.40531940076351164   0.406491891092062;
  2500     4   NaN 0.3470720697581768   0.3486241495847702;
  2500     8  NaN 0.32767708640992643   0.33307109201848506;
  2500    16  NaN 0.3038450751379132   0.3368173872858286;
  2500    32   NaN  0.22344197415933012   0.42593654311820867;  
  #  
  5000    2    NaN        0.4013651686578989   0.39878528380095957;
  5000    4   NaN         0.342437104023993   0.34119234438836576;
  5000     8  NaN         0.32305400538146495   0.32452807188332083;
  5000    16  NaN         0.3018025523386896   0.3175238376311958;
  5000    32  NaN         0.2449944484008476   0.3796675715882331;  
  #  
  10000    2  NaN        0.3732329475902021   0.37559253580197693;
  10000    4  NaN        0.33883432356342674   0.3424121218778193;
  10000    8 NaN         0.31720585590302947   0.32199611178934573;
  10000    16 NaN        0.2949587641224265   0.30554658118002115;
  10000    32 NaN        0.2617880039587617   0.341358633896336;
  #  
  20000    2   NaN       0.38824242626205085   0.3884229839064181;
  20000    4   NaN       0.33861259486638007   0.3388231173362583;
  20000    8   NaN       0.3161013276733458   0.3174630878604949;
  20000    16  NaN       0.2982372886057943   0.303239771659486;
  20000    32  NaN       0.27236195922605694   0.3085253934906796
]
######################################################







nns = ["PCA-Net", "DeepO-Net", "PARA-Net", "FNO"]
colors = ["C0","C1", "C2", "C3"]
markers = ["o", "s", "^", "*"]
linestyle = ["dotted", "-.", "--", "-", ]

# width

fig, ax = PyPlot.subplots(ncols = 4, sharex=false, sharey=true, figsize=(24,6))
for i = 1:4
    ax[1].plot(PCA_Data[(i+3)*5+1:(i+3)*5+5, 2], PCA_Data[(i+3)*5+1:(i+3)*5+5, 5], color = "black", linestyle=linestyle[i], marker = markers[i], fillstyle="none",      label =  "N = "*string(Int(PCA_Data[(i+3)*5+1, 1])))
    ax[2].plot(DeepONet_Data[(i+3)*5+1:(i+3)*5+5, 2], DeepONet_Data[(i+3)*5+1:(i+3)*5+5, 5], color = "black", linestyle=linestyle[i], marker = markers[i], fillstyle="none", label =  "N = "*string(Int(DeepONet_Data[(i+3)*5+1, 1])))
    ax[3].plot(PARA_Data[(i+3)*5+1:(i+3)*5+5, 2], PARA_Data[(i+3)*5+1:(i+3)*5+5, 5], color = "black", linestyle=linestyle[i], marker = markers[i], fillstyle="none",     label =  "N = "*string(Int(PARA_Data[(i+3)*5+1, 1]))  )
    ax[4].plot(FNO_Data[(i+3)*5+1:(i+3)*5+5, 2], FNO_Data[(i+3)*5+1:(i+3)*5+5, 5], color = "black", linestyle=linestyle[i], marker = markers[i], fillstyle="none",      label =  "N = "*string(Int(FNO_Data[(i+3)*5+1, 1]))  )
end

for i = 1:4
    ax[i].title.set_text(nns[i])   
end
ax[1].legend()

plt.tight_layout()
plt.savefig("Advection-dc1-Width-Error.pdf")




## Data vs Error
fig, ax = PyPlot.subplots(ncols = 4, sharex=true, sharey=true, figsize=(24,6))
nns = ["PCA-Net", "DeepO-Net", "PARA-Net", "FNO"]
colors = ["C0","C1", "C2", "C3"]
markers = ["o", "s", "^", "*"]
linestyle = ["--", "-.", "-", "dotted"]

row_ids = [1,2,3,4]
# small

for i = 1:4   
    N_Data = [156, 312, 625, 1250, 2500, 5000, 10000, 20000]
    ax[i].loglog(N_Data, PCA_Data[row_ids[i]:5:40, 5],      color = colors[1], linestyle=linestyle[4], marker = markers[1], fillstyle="none",      label =  nns[1]  )
    ax[i].loglog(N_Data, DeepONet_Data[row_ids[i]:5:40, 5], color = colors[2], linestyle=linestyle[4], marker = markers[2], fillstyle="none",      label =  nns[2]  )
    ax[i].loglog(N_Data, PARA_Data[row_ids[i]:5:40, 5],     color = colors[3], linestyle=linestyle[4], marker = markers[3], fillstyle="none",      label =  nns[3]  )
    ax[i].loglog(N_Data, FNO_Data[row_ids[i]:5:40, 5],      color = colors[4], linestyle=linestyle[4], marker = markers[4], fillstyle="none",      label =  nns[4]  )
    
    ax[i].loglog(N_Data, 0.1*sqrt(N_Data[1]) ./ sqrt.(N_Data), color = "black",    label =  "1/√N")
end
ax[1].legend()

plt.tight_layout()
plt.savefig("Advection-dc1-Data-Error.pdf")









# complexity
Np=200
layers = 4
n_in = 200
kmax = 12
for i = 1:size(PCA_Data)[1]
    PCA_Data[i, 3] = PCA_Net_Cost(n_in, PCA_Data[i, 2],layers, Np)
end
for i = 1:size(DeepONet_Data)[1]
    DeepONet_Data[i, 3] = DeepO_Net_Cost(n_in, DeepONet_Data[i, 2],layers, Np)
end
for i = 1:size(PARA_Data)[1]
    PARA_Data[i, 3] = PARA_Net_Cost(n_in, PARA_Data[i, 2],layers, Np)
end
for i = 1:size(FNO_Data)[1]
    FNO_Data[i, 3] = FNO_Net_Cost(FNO_Data[i, 2], kmax, layers, Np)
end

fig, ax = PyPlot.subplots(ncols = 4, sharex=true, sharey=true, figsize=(24,6))


for i = 1:4
    ax[i].semilogx(PCA_Data[(i+3)*5+1:(i+3)*5+5, 3], PCA_Data[(i+3)*5+1:(i+3)*5+5, 5], color = colors[1], linestyle=linestyle[4], marker = markers[1], fillstyle="none",      label =  nns[1]  )
    ax[i].semilogx(DeepONet_Data[(i+3)*5+1:(i+3)*5+5, 3], DeepONet_Data[(i+3)*5+1:(i+3)*5+5, 5], color = colors[2], linestyle=linestyle[4], marker = markers[2], fillstyle="none", label =  nns[2]  )
    ax[i].semilogx(PARA_Data[(i+3)*5+1:(i+3)*5+5, 3], PARA_Data[(i+3)*5+1:(i+3)*5+5, 5], color = colors[3], linestyle=linestyle[4], marker = markers[3], fillstyle="none",     label =  nns[3]  )
    ax[i].semilogx(FNO_Data[(i+3)*5+1:(i+3)*5+5, 3], FNO_Data[(i+3)*5+1:(i+3)*5+5, 5], color = colors[4], linestyle=linestyle[4], marker = markers[4], fillstyle="none",      label =  nns[4]  )
 ax[i].title.set_text("N = "*string(Int(FNO_Data[(i+3)*5+1, 1])))   
end
ax[1].legend()

plt.tight_layout()
plt.savefig("Advection-dc1-Cost-Error.pdf")






